{"version":3,"file":"index.umd.js","sources":["../node_modules/tailwindcss/lib/util/createPlugin.js","../node_modules/tailwindcss/lib/public/create-plugin.js","../index.ts","../node_modules/tailwindcss/plugin.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function() {\n        return _default;\n    }\n});\nfunction createPlugin(plugin, config) {\n    return {\n        handler: plugin,\n        config\n    };\n}\ncreatePlugin.withOptions = function(pluginFunction, configFunction = ()=>({})) {\n    const optionsFunction = function(options) {\n        return {\n            __options: options,\n            handler: pluginFunction(options),\n            config: configFunction(options)\n        };\n    };\n    optionsFunction.__isOptionsFunction = true;\n    // Expose plugin dependencies so that `object-hash` returns a different\n    // value if anything here changes, to ensure a rebuild is triggered.\n    optionsFunction.__pluginFunction = pluginFunction;\n    optionsFunction.__configFunction = configFunction;\n    return optionsFunction;\n};\nconst _default = createPlugin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function() {\n        return _default;\n    }\n});\nconst _createPlugin = /*#__PURE__*/ _interop_require_default(require(\"../util/createPlugin\"));\nfunction _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nconst _default = _createPlugin.default;\n","import plugin from 'tailwindcss/plugin.js';\n\nexport default plugin(({ matchVariant }) => {\n  matchVariant('pattern', (pattern_selector) => {\n    const [pattern, selector = '*', extraneous] = pattern_selector.split(';').map((str) => str.trim());\n    if (!pattern) throw new Error(`No pattern provided in Tailwind CSS selector pattern '${pattern_selector}'`);\n    const optionalSelector = selector === '*' ? '' : selector;\n    if (extraneous)\n      throw new Error(\n        `Found more than 2 semicolon-delimited (;) arguments in Tailwind CSS selector pattern '${pattern_selector}'`\n      );\n\n    const combinator = pattern[0];\n    const validCombinatorSymbols = ['+', '-', '%', '>', '<', '^'];\n    if (!combinator || !validCombinatorSymbols.includes(combinator))\n      throw new Error(\n        `Combinator used '${combinator}' in Tailwind CSS selector pattern '${pattern_selector}' is not one of the valid combinators: ${validCombinatorSymbols.join(\n          ', '\n        )}`\n      );\n\n    const isDoubleCombinator = pattern[1] === combinator;\n    if (!isDoubleCombinator && validCombinatorSymbols.includes(pattern[1] as unknown as string))\n      throw new Error(\n        `Second character in Tailwind CSS selector pattern '${pattern_selector}' ('${pattern[1]}') is a valid combinator but does not match the first combinator used ('${combinator}')`\n      );\n\n    const nthIndex_dir = isDoubleCombinator ? pattern.slice(2) : pattern.slice(1);\n    if (isDoubleCombinator && nthIndex_dir)\n      throw new Error(\n        `Double combinator '${combinator.repeat(\n          2\n        )}' in Tailwind CSS selector pattern '${pattern_selector}' can only be followed by an optional selector argument, delimited by a semicolon; instead found '${nthIndex_dir}'`\n      );\n\n    const validDirSymbols = ['<', '>'];\n    const hasDir = !isDoubleCombinator && validDirSymbols.includes(nthIndex_dir.slice(-1));\n    const [_nthIndex = '1', dir] = !isDoubleCombinator\n      ? hasDir\n        ? [nthIndex_dir.slice(0, -1), nthIndex_dir.slice(-1)]\n        : nthIndex_dir\n          ? [nthIndex_dir]\n          : []\n      : [];\n\n    const nthIndex = Number(_nthIndex);\n    console.log({\n      pattern,\n      hasDir,\n      _nthIndex,\n      dir,\n      nthIndex,\n    });\n    if (!Number.isFinite(nthIndex))\n      throw new Error(`Invalid nth-index value '${_nthIndex}' in Tailwind CSS selector pattern '${pattern_selector}'`);\n    if (!(nthIndex > 0))\n      throw new Error(\n        `nth-index value '${nthIndex}' in Tailwind CSS selector pattern '${pattern_selector}' must be greater than 0`\n      );\n\n    let result = '';\n\n    if (combinator === '+' || combinator === '%') {\n      if (isDoubleCombinator) {\n        result += `& ~ ${selector}`;\n      } else if (!dir) {\n        result += `& + ${'* + '.repeat(nthIndex - 1)}${selector}`;\n      } else if (dir === '<') {\n        result += [...Array(nthIndex)].map((_, i) => `& + ${'* + '.repeat(i)}${selector}`).join(', ');\n      } else if (dir === '>') {\n        result += `& ${'+ * '.repeat(nthIndex - 1)}~ ${selector}`;\n      }\n    }\n    if (combinator === '%') result += `, `;\n    if (combinator === '-' || combinator === '%') {\n      if (isDoubleCombinator) {\n        result += `${optionalSelector}:has(~ &)`;\n      } else if (!dir) {\n        result += `${optionalSelector}:has(${'+ * '.repeat(nthIndex - 1)}+ &)`;\n      } else if (dir === '<') {\n        result += `${optionalSelector}:has(${[...Array(nthIndex)].map((_, i) => `+ ${'* + '.repeat(i)}&`).join(', ')})`;\n      } else if (dir === '>') {\n        result += `${optionalSelector}:has(~${' * +'.repeat(nthIndex - 1)} &)`;\n      }\n    }\n    if (combinator === '>' || combinator === '^') {\n      if (isDoubleCombinator) {\n        result += `& ${selector}`;\n      } else if (!dir) {\n        result += `& ${'> * '.repeat(nthIndex - 1)}> ${selector}`;\n      } else if (dir === '<') {\n        result += [...Array(nthIndex)].map((_, i) => `& > ${'* > '.repeat(i)}${selector}`).join(', ');\n      } else if (dir === '>') {\n        result += `& ${'> * '.repeat(nthIndex - 1)}${selector}`;\n      }\n    }\n    if (combinator === '^') result += `, `;\n    if (combinator === '<' || combinator === '^') {\n      if (isDoubleCombinator) {\n        result += `${optionalSelector}:has(&)`;\n      } else if (!dir) {\n        result += `${optionalSelector}:has(${'> * '.repeat(nthIndex - 1)}> &)`;\n      } else if (dir === '<') {\n        result += `${optionalSelector}:has(${[...Array(nthIndex)].map((_, i) => `${'> * '.repeat(i)}> &`).join(', ')})`;\n      } else if (dir === '>') {\n        result += `${optionalSelector}:has(${'* > '.repeat(nthIndex - 1)}&)`;\n      }\n    }\n    return `:is(${result})`;\n  });\n});\n","let createPlugin = require('./lib/public/create-plugin')\nmodule.exports = (createPlugin.__esModule ? createPlugin : { default: createPlugin }).default\n"],"names":["createPlugin","plugin","config","handler","Object","defineProperty","exports","value","enumerable","get","_default","withOptions","pluginFunction","configFunction","optionsFunction","options","__options","__isOptionsFunction","__pluginFunction","__configFunction","_interop_require_default","obj","__esModule","default","require$$0","_ref","matchVariant","pattern_selector","_pattern_selector$spl","split","map","str","trim","pattern","_pattern_selector$spl2","selector","extraneous","Error","optionalSelector","combinator","validCombinatorSymbols","includes","join","isDoubleCombinator","nthIndex_dir","slice","repeat","hasDir","_ref2","_ref2$","_nthIndex","dir","nthIndex","Number","console","log","isFinite","result","concat","Array","_","i"],"mappings":"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"}