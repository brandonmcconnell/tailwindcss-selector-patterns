import e from"tailwindcss/plugin";module.exports=e(function(e){(0,e.matchVariant)("pattern",function(e){var r=e.split(";").map(function(e){return e.trim()}),n=r[0],t=r[1],a=void 0===t?"*":t,i="*"===a?"":a;if(r[2])throw new Error("Found more than 2 semicolon-delimited (;) arguments in Tailwind CSS selector pattern '"+e+"'");var o=n[0],c=["+","-","%",">","<","^"];if(!c.includes(o))throw new Error("Combinator used '"+o+"' in Tailwind CSS selector pattern '"+e+"' is not one of the valid combinators: "+c.join(", "));var s=n[1]===o;if(!s&&c.includes(n[1]))throw new Error("Second character in Tailwind CSS selector pattern '"+e+"' ('"+n[1]+"') is a valid combinator but does not match the first combinator used ('"+o+"')");var l=n.slice(s?2:1);if(s&&l)throw new Error("Double combinator '"+o.repeat(2)+"' in Tailwind CSS selector pattern '"+e+"' can only be followed by an optional selector argument, delimited by a semicolon; instead found '"+l+"'");var d=!s&&["<",">"].includes(l.slice(-1)),p=s?[]:d?[l.slice(0,-1),l.slice(-1)]:l?[l]:[],u=p[0],h=void 0===u?"1":u,m=p[1],w=Number(h);if(console.log({pattern:n,hasDir:d,_nthIndex:h,dir:m,nthIndex:w}),!Number.isFinite(w))throw new Error("Invalid nth-index value '"+h+"' in Tailwind CSS selector pattern '"+e+"'");if(!(w>0))throw new Error("nth-index value '"+w+"' in Tailwind CSS selector pattern '"+e+"' must be greater than 0");var f="";return"+"!==o&&"%"!==o||(s?f+="& ~ "+a:m?"<"===m?f+=[].concat(Array(w)).map(function(e,r){return"& + "+"* + ".repeat(r)+a}).join(", "):">"===m&&(f+="& "+"+ * ".repeat(w-1)+"~ "+a):f+="& + "+"* + ".repeat(w-1)+a),"%"===o&&(f+=", "),"-"!==o&&"%"!==o||(s?f+=i+":has(~ &)":m?"<"===m?f+=i+":has("+[].concat(Array(w)).map(function(e,r){return"+ "+"* + ".repeat(r)+"&"}).join(", ")+")":">"===m&&(f+=i+":has(~"+" * +".repeat(w-1)+" &)"):f+=i+":has("+"+ * ".repeat(w-1)+"+ &)"),">"!==o&&"^"!==o||(s?f+="& "+a:m?"<"===m?f+=[].concat(Array(w)).map(function(e,r){return"& > "+"* > ".repeat(r)+a}).join(", "):">"===m&&(f+="& "+"> * ".repeat(w-1)+a):f+="& "+"> * ".repeat(w-1)+"> "+a),"^"===o&&(f+=", "),"<"!==o&&"^"!==o||(s?f+=i+":has(&)":m?"<"===m?f+=i+":has("+[].concat(Array(w)).map(function(e,r){return"> * ".repeat(r)+"> &"}).join(", ")+")":">"===m&&(f+=i+":has("+"* > ".repeat(w-1)+"&)"):f+=i+":has("+"> * ".repeat(w-1)+"> &)"),":is("+f+")"})});
//# sourceMappingURL=index.module.js.map
